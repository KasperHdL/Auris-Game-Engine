<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_shader_8cpp" kind="file" language="C++">
    <compoundname>Shader.cpp</compoundname>
    <includes refid="_shader_8hpp" local="yes">Auris/Utilities/Shader.hpp</includes>
    <includes local="yes">SRE/Shader.hpp</includes>
    <includes local="yes">SRE/Texture.hpp</includes>
    <includes local="yes">SRE/BlendType.hpp</includes>
    <incdepgraph>
      <node id="472">
        <label>SRE/Texture.hpp</label>
      </node>
      <node id="473">
        <label>SRE/BlendType.hpp</label>
      </node>
      <node id="469">
        <label>Projects/GameEngine/Auris/src/Auris/Utilities/Shader.cpp</label>
        <link refid="_shader_8cpp"/>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
      </node>
      <node id="471">
        <label>SRE/Shader.hpp</label>
      </node>
      <node id="470">
        <label>Auris/Utilities/Shader.hpp</label>
        <link refid="_shader_8hpp"/>
        <childnode refid="471" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_auris">Auris</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shader_8hpp" kindref="compound">Auris/Utilities/Shader.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SRE/Shader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SRE/Texture.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SRE/BlendType.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_auris" kindref="compound">Auris</ref>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>SRE::Shader*<sp/><ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">Shader::litSprite</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_auris_1_1_shader_aa5d2e82ef525d3d21c66fc0686f9cfe8_1aa5d2e82ef525d3d21c66fc0686f9cfe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_auris_1_1_shader" kindref="compound">Shader</ref>*<sp/><ref refid="class_auris_1_1_shader_aa5d2e82ef525d3d21c66fc0686f9cfe8_1aa5d2e82ef525d3d21c66fc0686f9cfe8" kindref="member">Shader::getLitSprite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_auris_1_1_shader" kindref="compound">Shader</ref>*)<sp/><ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>vertexShader<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;(#version<sp/>140</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec4<sp/>position;</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec3<sp/>normal;</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec2<sp/>uv;</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>vec2<sp/>vUV;</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>vec3<sp/>objPos;</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>model;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>view;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>mat4<sp/>projection;</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>main(void)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec4<sp/>obj<sp/>=<sp/>model<sp/>*<sp/>position;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gl_Position<sp/>=<sp/>projection<sp/>*<sp/>view<sp/>*<sp/>obj;</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vUV<sp/>=<sp/>uv;</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objPos<sp/>=<sp/>obj.xyz;</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)&quot;;</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fragmentShader<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;(#version<sp/>140</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>vec4<sp/>fragColor;</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec2<sp/>vUV;</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>vec3<sp/>objPos;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>vec4<sp/>ambientLight;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>vec4<sp/>color;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>sampler2D<sp/>tex;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>sampler2D<sp/>normalMap;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>vec4<sp/>lightPosType[4];</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform<sp/>vec4<sp/>lightColorRange[4];</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>main(void)</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>lightColor<sp/>=<sp/>ambientLight.xyz;</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>normal<sp/>=<sp/>texture(normalMap,<sp/>vUV).xyz<sp/>*<sp/>vec3(2.0,<sp/>2.0,2.0)<sp/>-<sp/>vec3(1.0,<sp/>1.0,1.0);</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>diffuseFrac<sp/>=<sp/>1.0<sp/>-<sp/>ambientLight.w;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(<sp/>int<sp/>i=0;i&lt;4;i++){</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>isDirectional<sp/>=<sp/>lightPosType[i].w<sp/>==<sp/>0.0;</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>isPoint<sp/>=<sp/>lightPosType[i].w<sp/>==<sp/>1.0;</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>lightDirection;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>att<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(isDirectional){</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightDirection<sp/>=<sp/>lightPosType[i].xyz;</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if(isPoint){</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec3<sp/>lightVector<sp/>=<sp/>objPos.xyz<sp/>-<sp/>lightPosType[i].xyz;</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>lightVectorLength<sp/>=<sp/>length(lightVector);</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightDirection<sp/>=<sp/>lightVector<sp/>/<sp/>lightVectorLength;</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>lightRange<sp/>=<sp/>lightColorRange[i].w;</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(lightRange<sp/>&lt;=<sp/>0.0){</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else<sp/>if(lightVectorLength<sp/>&gt;=<sp/>lightRange){</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>att<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>att<sp/>=<sp/>pow(1.0-lightVectorLength<sp/>/<sp/>lightRange,<sp/>1.5);</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>diffuse<sp/>=<sp/>max(0.0,<sp/>dot(-lightDirection,<sp/>vec3(normal)<sp/>/<sp/>length(normal)));</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(diffuse<sp/>&gt;<sp/>0.0){</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightColor<sp/>+=<sp/>(att<sp/>*<sp/>diffuseFrac<sp/>*<sp/>diffuse)<sp/>*<sp/>lightColorRange[i].xyz;</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vec4<sp/>c<sp/>=<sp/>color<sp/>*<sp/>texture(tex,<sp/>vUV);</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragColor<sp/>=<sp/>c<sp/>*<sp/>vec4(lightColor,<sp/>1.0);</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)&quot;;</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref><sp/>=<sp/>createShader(vertexShader,<sp/>fragmentShader);</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref>-&gt;set(</highlight><highlight class="stringliteral">&quot;color&quot;</highlight><highlight class="normal">,<sp/>glm::vec4(1));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref>-&gt;set(</highlight><highlight class="stringliteral">&quot;normalMap&quot;</highlight><highlight class="normal">,<sp/>SRE::Texture::getWhiteTexture());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref>-&gt;set(</highlight><highlight class="stringliteral">&quot;tex&quot;</highlight><highlight class="normal">,<sp/>SRE::Texture::getWhiteTexture());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref>-&gt;setBlend(SRE::BlendType::AlphaBlending);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref>-&gt;setDepthTest(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_auris_1_1_shader" kindref="compound">Shader</ref>*)<ref refid="class_auris_1_1_shader_a78415c16005991c0e2adce9f406097c8_1a78415c16005991c0e2adce9f406097c8" kindref="member">litSprite</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Projects/GameEngine/Auris/src/Auris/Utilities/Shader.cpp"/>
  </compounddef>
</doxygen>
